// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int   @id @default(autoincrement())
  userId    String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Guild {
  id        Int   @id @default(autoincrement())
  guildId   String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  settings Settings?
}

model Settings {
  id          Int   @id @default(autoincrement())
  guildId     String @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  modules     String?
  challenge   Challenges[]
  guild       Guild    @relation(fields: [guildId], references: [guildId])
  ticketPanel TicketPanel[]
}

model TicketPanel {
  id        String   @id @default(cuid())
  settingsId Int
  name     String
  channelId String
  categoryId String
  closedCategoryId String
  messageId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  setting Settings @relation(fields: [settingsId], references: [id])

  Ticket Ticket[]
}

model Ticket {
  id        String   @id @default(cuid())
  panelId   String 
  ticketChannel String @unique
  status    TicketStatus @default(OPEN)
  createdBy String
  claimBy   String?
  closeReason String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  panel     TicketPanel @relation(fields: [panelId], references: [id])
}

model Warns {
  id        Int   @id @default(autoincrement())
  userId    String
  guildId   String
  reason    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Bans {
  id        Int   @id @default(autoincrement())
  userId    String
  guildId   String
  reason    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Mutes {
  id        Int   @id @default(autoincrement())
  userId    String
  guildId   String
  reason    String
  duration  BigInt
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Challenges {
  id        Int   @id @default(autoincrement())
  guildId   String
  challenge ChallengesType
  channelId String
  playEach  Int
  nextTime  DateTime
  settingsId Int
  settings  Settings @relation(fields: [settingsId], references: [id])
  enabled   Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum TicketStatus {
  OPEN
  CLOSED
}

enum ChallengesType {
  REACTIONS
  WORDS
  MATHS
  SCRAMBLE
}